labs(title = l_title[i],
y = l_label[i])
}
f(1)
df_year <- df %>%
+     ungroup() %>%
+     group_by(year)
> ggplot(df_year) +
+     geom_line(mapping = aes_string(x = 'year', y = l_index[1])) +
+     geom_point(mapping = aes(x = 'year', y = l_index[1]),size = 2, alpha = 0.6, color='red') +
+     labs(title = l_title[1],
+          y = l_label[1])
i=1
df <- as.data.frame(l_disc[i])
df_year <- df %>%
ungroup() %>%
group_by(year)
ggplot(df_year) +
geom_line(mapping = aes_string(x = 'year', y = l_index[i])) +
geom_point(mapping = aes(x = 'year', y = l_index[i]),size = 2, alpha = 0.6, color='red') +
labs(title = l_title[i],
y = l_label[i])
df_year
class(df_year)
df_year <- as.data.frame(df_year)
class(df_year)
df_year
df <- as.data.frame(l_disc[i])
df_year <- df %>%
ungroup() %>%
group_by(year)
df_year <- as.data.frame(df_year)
ggplot(df_year) +
geom_line(mapping = aes_string(x = 'year', y = l_index[i])) +
geom_point(mapping = aes(x = 'year', y = l_index[i]),size = 2, alpha = 0.6, color='red') +
labs(title = l_title[i],
y = l_label[i])
df <- as.data.frame(l_disc[i])
df_year <- df %>%
ungroup() %>%
group_by(year)
df_year <- as.data.frame(df_year)
ggplot(df_year) +
geom_line(mapping = aes_string(x = 'year', y = l_index[i])) +
geom_point(mapping = aes_string(x = 'year', y = l_index[i]),size = 2, alpha = 0.6, color='red') +
labs(title = l_title[i],
y = l_label[i])
df <- as.data.frame(l_disc[i])
df
df_year <- df %>%
ungroup() %>%
group_by(year)
df_year
View(df_bus1)
View(df_bus1)
df_year <- df %>%
ungroup()
df_year
df_year <- df %>%
group_by(year)
df_year
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
#import data
df <- read_tsv('/Users/zhangwan/Documents/GitHub/bios611-projects-fall-2019-Wan-z/project_1/data/UMD_Services_Provided_20190719.tsv')
date <- str_split_fixed(df$Date, '/', 3)
df$month = as.numeric(date[,1])
df$day = as.numeric(date[,2])
df$year = as.numeric(date[,3])
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
View(df_bus)
View(df_bus)
df_bus1 <- df_bus %>%
View(df_bus)
View(df_year)
View(df_bus)
View(df_bus)
help("summarise")
var <- `Bus Tickets (Number of)`
var <- 'Bus Tickets (Number of)'
xdf_bus1 <- df_bus %>%
group_by(month) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[var]])
)
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year, month) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year, month) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
df_bus1 <- df_bus %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[var]])
)
var <- 'number_bus_tickets'
df_bus1 <- df_bus %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[var]])
)
View(df_bus1)
View(df_bus1)
f <- function(i){
df <- as.data.frame(l_disc[i])
df_new <- df %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[l_index[i]]])
)
ggplot(df) +
geom_line(mapping = aes_string(x = 'year', y = l_index[i])) +
geom_point(mapping = aes_string(x = 'year', y = l_index[i]),size = 2, alpha = 0.6, color='red') +
labs(title = l_title[i],
y = l_label[i])
}
f(1)
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year, month) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
df_bus1 <- df_bus %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[var]])
)
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year, month) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
#import data
df <- read_tsv('/Users/zhangwan/Documents/GitHub/bios611-projects-fall-2019-Wan-z/project_1/data/UMD_Services_Provided_20190719.tsv')
date <- str_split_fixed(df$Date, '/', 3)
df$month = as.numeric(date[,1])
df$day = as.numeric(date[,2])
df$year = as.numeric(date[,3])
df_bus <- df %>%
filter(year>1996 & year<2019) %>%
drop_na('Bus Tickets (Number of)') %>%
filter('Bus Tickets (Number of)' > 0) %>%
group_by(year, month) %>%
summarise(count = n(),
number_bus_tickets = sum(`Bus Tickets (Number of)`)
)
l_disc <- list(df_bus, df_diapers, df_schoolkits, df_hgkit, df_finance)
l_index <- c('number_bus_tickets', 'diapers', 'school_kits', 'hgkit', 'finance')
l_title <- c('Bus Tickets (Number of)', 'Diapers (average amount)', 'School Kits', 'Hygiene Kits', 'Financial Support')
l_label <- c('Number of bus tickets', 'Amount of diapers', 'Annual Number of School Kits', 'Annual amount of hgyiene kits', 'Financial Support')
View(df_bus)
View(df_bus)
f <- function(i){
df <- as.data.frame(l_disc[i])
df_new <- df %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[l_index[i]]])
)
ggplot(df_new) +
geom_line(mapping = aes_string(x = 'year', y = l_index[i])) +
geom_point(mapping = aes_string(x = 'year', y = l_index[i]),size = 2, alpha = 0.6, color='red') +
labs(title = l_title[i],
y = l_label[i])
}
f(1)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
))
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
output$popPlot <- renderPlot({
f(input$select)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
output$popPlot <- renderPlot({
f(input$select_trend)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarLayout(
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
output$popPlot <- renderPlot({
f(input$select_trend)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarLayout(
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
output$popPlot <- renderPlot({
f(input$select_trend)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarLayout(
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = c('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
output$popPlot <- renderPlot({
f(input$select_trend)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
source('helper_functions.R')
ui <- fluidPage(
titlePanel('Analysis on UMD Data'),
navlistPanel(
"Discontinued or Small Scale Services",
tabPanel("Trends",
h3('Trends of Discontinued or Small Scale Services'),
sidebarLayout(
sidebarPanel(
selectInput("select_trend",
h5("Variables for x-axis"),
choices = list('Bus Tickets' = 1,
'Diapers' = 2,
'School Kits' = 3,
'Hgyiene Kits' = 4,
'Financial Support' = 5
)
)
),
mainPanel(
plotOutput(outputId = "popPlot")
)
)
),
tabPanel("Distributions"),
"Food and Clothing",
tabPanel("Food"),
tabPanel("Clothing"),
"Analysis on Clients",
tabPanel("Prediction of 2019")
)
)
server <- function(input, output) {
output$popPlot <- renderPlot({
f(input$select_trend)
})
}
shinyApp(ui, server)
#function for trends plots
f <- function(i){
df <- as.data.frame(l_disc[i])
df_new <- df %>%
group_by(year) %>%
summarise(count = n(),
number_bus_tickets = sum(.data[[l_index[i]]])
)
p<- ggplot(df_new) +
geom_line(mapping = aes_string(x = 'year', y = l_index[i])) +
geom_point(mapping = aes_string(x = 'year', y = l_index[i]),size = 2, alpha = 0.6, color='red') +
labs(title = l_title[i],
y = l_label[i])
return(p)
}
f(1)
