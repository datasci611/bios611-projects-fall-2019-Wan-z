group_by(prior_living_situation) %>%
summarise(count = n())
df_case_sub
df_case_sub <- df_case %>%
group_by(prior_living_situation) %>%
summarise(count = n()) %>%
sort(count, decreasing = TRUE)
df_case_sub <- df_case %>%
group_by(prior_living_situation) %>%
summarise(count = n()) %>%
arrange(count, decreasing = TRUE)
df_case_sub <- df_case %>%
group_by(prior_living_situation) %>%
summarise(count = n()) %>%
arrange(desc(count))
df_case_sub
df_case_sub <- df_case %>%
group_by(prior_living_situation) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
filter(prior_living_situation == c("Place not meant for habitation (HUD)", "Emergency shelter, incl. hotel/motel paid for w/ ES voucher, or RHY-funded Host Home shelter (HUD)", "Staying or living in a friend's room, apartment or house (HUD)", "Staying or living in a family member's room, apartment or house (HUD)"))
df_case_sub <- df_case %>%
filter(prior_living_situation in c("Place not meant for habitation (HUD)", "Emergency shelter, incl. hotel/motel paid for w/ ES voucher, or RHY-funded Host Home shelter (HUD)", "Staying or living in a friend's room, apartment or house (HUD)", "Staying or living in a family member's room, apartment or house (HUD)"))
df_case_sub <- df_case %>%
filter(prior_living_situation %in% c("Place not meant for habitation (HUD)", "Emergency shelter, incl. hotel/motel paid for w/ ES voucher, or RHY-funded Host Home shelter (HUD)", "Staying or living in a friend's room, apartment or house (HUD)", "Staying or living in a family member's room, apartment or house (HUD)"))
df_case_sub
ggplot(df_case_sub %>% filter(months_on_street != ""&prior_living_situation != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = prior_living_situation)) +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
ggplot(df_case_sub %>% filter(months_on_street != ""&prior_living_situation != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = prior_living_situation)) +
theme(legend.position = "bottom") +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
help(theme)
ggplot(df_case_sub %>% filter(months_on_street != ""&prior_living_situation != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = prior_living_situation)) +
theme(legend.position = "bottom", legend.direction = vertical) +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
ggplot(df_case_sub %>% filter(months_on_street != ""&prior_living_situation != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = prior_living_situation)) +
theme(legend.position = "bottom", legend.direction = 'vertical') +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
ggsave('./results/month_on_street_priorliving.png', height=6, width=6)
ggplot(df_case_sub %>% filter(months_on_street != ""&prior_living_situation != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = prior_living_situation)) +
theme(legend.position = "bottom", legend.direction = 'vertical') +
scale_fill_gradient2(low="blue", mid="white", high="red") +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
help(scale_fill_discrete())
help(scale_fill_discrete
)
library(MASS)
fitdistr(df_ns$type, 'poisson')
fitdistr(as.vector(df_ns$type), 'poisson')
df_ns$type
View(df_ns)
View(df_ns)
df_ns$number
df_ns$type
df_n$number_cases
fitdistr(as.vector(df_n$number_cases), 'poisson')
fit <- glm(number_cases ~ Entry_Year, offset = log(n), family = poisson(), data = df_n)
df_n$Entry_Year <- as.numeric(df_n$Entry_Year)
fit <- glm(number_cases ~ Entry_Year, offset = log(n), family = poisson(), data = df_n)
df_n$Entry_Year <- as.numeric(df_n$Entry_Year)-2014
fit <- glm(number_cases ~ Entry_Year, offset = log(n), family = poisson(), data = df_n)
fit <- glm(number_cases ~ Entry_Year, family = poisson(), data = df_n)
summary(fit)
fit <- glm(number_cases ~ Entry_Year, family = poisson(link = "log"), data = df_n)
summary(fit)
fitdistr(as.vector(df_n$number_cases), 'poisson')
df_n <- df_n %>%
filter(Entry_Year < 2019)
fit <- glm(number_cases ~ Entry_Year, family = poisson(link = "log"), data = df_n)
summary(fit)
df_n
df_n <- df_n %>%
filter(Entry_Year < 5)
fit <- glm(number_cases ~ Entry_Year, family = poisson(link = "log"), data = df_n)
summary(fit)
View(df_n)
View(df_n)
ggplot(df_n, aes(x = Entry_Year, y = number_cases)) +
geom_smooth()
help("geom_smooth")
ggplot(df_n, aes(x = Entry_Year, y = number_cases)) +
geom_smooth(method = "glm")
exp(6.75071 + 0.04924*6)
fit$linear.predictors
exp(fit$linear.predictors)
fitdistr(as.vector(df_n$number_cases), 'poisson')
ggplot(df_client, aes(x = Monthly.Amount..Exit., y = Period)) +
geom_bin2d() +
labs(title = 'How Income Influence Period', x = 'Monthly Income')
ggsave('./results/income_peri.png', height=4, width=6)
ggplot(df_case %>% filter(housing_status != ""), aes(x = Client.Age.at.Entry, y = Period)) +
geom_col(aes(fill = housing_status)) +
labs(title = 'Period vs Client Age at Entry',
x = 'Client Age at Entry')
df_casenew <- df_case %>%
filter(housing_status != "") %>%
group_by(Client.Age.at.Entry) %>%
summarise(period = mean(Period))
ggplot(df_casenew, aes(x = Client.Age.at.Entry, y = period)) +
geom_smooth(se = FALSE, color = 'darkblue') +
geom_point(color = 'blue', size = 0.8, alpha = 0.6) +
labs(title = 'How Period Influenced by Client Age at Entry',
x = 'Client Age at Entry')
ggplot(df_case %>% filter(housing_status != ""), aes(x = Client.Age.at.Entry, y = Period)) +
geom_col(aes(fill = housing_status)) +
labs(title = 'Period vs Client Age at Entry',
x = 'Client Age at Entry')
df_casenew <- df_case %>%
filter(housing_status != "") %>%
group_by(Client.Age.at.Entry) %>%
summarise(period = mean(Period))
ggplot(df_casenew, aes(x = Client.Age.at.Entry, y = period)) +
geom_smooth(se = FALSE, color = 'darkblue') +
geom_point(color = 'blue', size = 0.8, alpha = 0.6) +
labs(title = 'How Period Influenced by Client Age at Entry',
x = 'Client Age at Entry')
#destination after leave
ggplot(df_case %>% filter(Destination != ""), aes(x = Destination)) +
geom_bar(position = position_stack(reverse = TRUE), fill = 'blue', alpha = 0.6) +
coord_flip() +
theme(legend.position = "top")
df_case$months_on_street <- factor(df_case$months_on_street, levels=c('<1', '2', '3', '4','5','6','7','8', '9','10','11','12','>12'))
ggplot(df_case %>% filter(months_on_street != ""&domestic_violence != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = domestic_violence)) +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
df_case_sub <- df_case %>%
group_by(prior_living_situation) %>%
summarise(count = n()) %>%
arrange(desc(count))
df_case_sub <- df_case %>%
filter(prior_living_situation %in% c("Place not meant for habitation (HUD)", "Emergency shelter, incl. hotel/motel paid for w/ ES voucher, or RHY-funded Host Home shelter (HUD)", "Staying or living in a friend's room, apartment or house (HUD)", "Staying or living in a family member's room, apartment or house (HUD)"))
ggplot(df_case_sub %>% filter(months_on_street != ""&prior_living_situation != ""), aes(x = months_on_street)) +
geom_bar(aes(fill = prior_living_situation)) +
theme(legend.position = "bottom", legend.direction = 'vertical') +
labs(title = 'How Many Months the Clients Homeless on Street in Past 3 Years',
x = 'Number of Months Homeless on Street')
library('tidyverse')
library('ggplot2')
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('report.Rmd', output_file='example_report.html')
library('tidyverse')
library('ggplot2')
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('report.Rmd', output_file='example_report.html')
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('report.Rmd', output_file='example_report.html')
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('./report.Rmd', output_file='example_report.html')
setwd("~/Documents/GitHub/bios611-projects-fall-2019-Wan-z/project_3")
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('./report.Rmd', output_file='../results/example_report.html')
setwd("~/Documents/GitHub/bios611-projects-fall-2019-Wan-z/project_3/script")
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('./report.Rmd', output_file='../results/example_report.html')
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('./report.Rmd', output_file='../results/example_report.html')
render('./report.Rmd', output_file='../results/report.html')
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('./report.Rmd', output_file='../results/report.html')
#healins
df_client$healthins_types <- as.factor(df_client$healthins_types)
ggplot(df_client, aes(x = healthins_types, y = frequency)) +
geom_boxplot(aes(group = cut_width(healthins_types, 0.25)), outlier.alpha = 0.1) +
labs(title = 'How Health Insurance Covering Status Influence Frequency')
ggsave('./results/healthins_freq.png', height=4, width=6)
ggplot(df_client, aes(x = healthins_types, y = Period)) +
geom_boxplot(aes(group = cut_width(healthins_types, 0.25)), outlier.alpha = 0.1) +
labs(title = 'How Health Insurance Covering Status Influence Period')
ggsave('./results/healthins_peri.png', height=4, width=6)
library('tidyverse')
library('ggplot2')
library(rmarkdown)
df_client <- read.csv('../data/CLIENTS.csv')
df_case <- read.csv('../data/CASE.csv')
df_n <- read.csv('../data/number.csv')
render('./report.Rmd', output_file='../results/report.html')
#Faraway 2e, page 180, Exercises 1
library(faraway)
data(seatpos)
seatpos
library(faraway)
data(seatpos)
dim(seatpos)
head(seatpos)
attach(seatpos)
seatpos[1:3,3:9]
csp <- seatpos[,3:8]
prcsp <- prcomp(csp)
summary(prcsp)
round(prcsp$rot)
plot(model1PCA)
plot(model1PCA, type="l")
seatpos[1:3,3:9]
model1PCA <- prcomp(seatpos[,3:8])
summary(model1PCA)
par(mfrow=c(1,2))
plot(model1PCA)
plot(model1PCA, type="l")
matplot(1:6, model1PCA$rotation[,1:3],type="l",xlab="Variables",ylab="")
model1 <- lm(hipcenter~model1PCA$x[,1])
model1A <- lm(hipcenter~HtShoes+Ht+Seated+Arm+Thigh+Leg)
anova(model1, model1A)
model1PCA$x[,1]
summary(model1PCA)
plot(model1)
#add age and weight
model2PCA <- prcomp(seatpos[,1:8])
summary(model2PCA)
par(mfrow=c(1,2))
plot(model2PCA)
plot(model2PCA, type="l")
model2 <- lm(hipcenter~model2PCA$x[,1:2])
model2A <- lm(hipcenter~Age+Weight+HtShoes+Ht+Seated+Arm+Thigh+Leg)
summary(model2)
summary(model2A)
x1 <- data.frame(HtShoes=181.08,Ht=178.56,Seated=91.44,Arm=35.64,Thigh=40.95,Leg=38.79)
x2 <- data.frame(Age=64.8,Weight=263.7,HtShoes=181.08,Ht=178.56,Seated=91.44, Arm=35.64,Thigh=40.95,Leg=38.79)
A <- as.matrix(summary(model1)$coef[,1])
B <- as.matrix(cbind(1,predict(model1PCA,new=x1)[1]))
B %*% A
C <- as.matrix(summary(model2)$coef[,1])
D <- rbind(1,as.matrix(predict(model2PCA,new=x2)[1:2]))
t(D) %*% C
summary(prcsp)
seatpos
lmod <- lm(hipcenter ~ prcsp$x[,1], data = seatpos)
lmod
summary(lmod)
par(mfrow=c(2,4))
plot(model1)
plot(model1A)
par(mfrow=c(2,4))
plot(model1)
plot(model1A)
summary(lmod)
a <- summary(lmod)
a$coefficients
model1 <- lm(hipcenter~model1PCA$x[,1])
summary(model1)
A <- as.matrix(summary(model1)$coef[,1])
A
B
predict(model1PCA,new=x1)[1]
lmod <- lm(hipcenter ~ prcsp$x[,1], data = seatpos)
summary(lmod)
s <- summary(lmod)
View(s)
X <- as.matrix(cbind(1,predict(prcsp,new=x1)[1]))
A <- as.matrix(summary(model1)$coef[,1])
A
coef <- as.matrix(s$coefficients)
x1 <- data.frame(HtShoes=181.08,Ht=178.56,Seated=91.44,Arm=35.64,Thigh=40.95,Leg=38.79)
X <- as.matrix(cbind(1,predict(prcsp,new=x1)[1]))
coef <- as.matrix(s$coefficients)
X %*% coef
coef <- as.matrix(s$coefficients[,1])
X %*% coef
X
coef
help("predict")
predict(prcsp,new=x1)[1]
predict(prcsp, newdata = x1)
csp_new <- seatpos[, 1:8]
predict(prcsp, newdata = x1)
prcsp_new <- prcomp(csp_new)
prcsp_new <- prcomp(csp_new)
summary(prscp_new)
summary(prcsp_new)
X %*% coef
x2 <- data.frame(Age=64.8,Weight=263.7,HtShoes=181.08,Ht=178.56,Seated=91.44, Arm=35.64,Thigh=40.95,Leg=38.79)
X2 <- as.matrix(cbind(1,predict(prcsp, newdata = x2)[1:2]))
coef <- as.matrix(s$coefficients[,1])
coef
lmods <- lm(hipcenter ~ prcsp$x[,1:2], data = seatpos)
s <- summary(lmods)
coef <- as.matrix(s$coefficients[,])
coef
coef <- as.matrix(s$coefficients[,1])
X2
X2 %*% coef
coef
X2
predict(prcsp, newdata = x2)[1:2]
X2 <- rbind(as.matrix(predict(prcsp, newdata = x2)[1:2])))
X2 <- rbind(1, as.matrix(predict(prcsp, newdata = x2)[1:2])))
X2 <- rbind(1, as.matrix(predict(prcsp, newdata = x2)[1:2]))
X2
coef <- as.matrix(s$coefficients[,1])
X2 %*% coef
coef
X
X <- rbind(1, as.matrix(predict(prcsp, newdata = x1)[1]))
X
prcsp_new <- prcomp(csp_new)
summary(prcsp_new)
t(X) %*% coef
x1 <- data.frame(HtShoes=181.08,Ht=178.56,Seated=91.44,Arm=35.64,Thigh=40.95,Leg=38.79)
X <- rbind(1, as.matrix(predict(prcsp, newdata = x1)[1]))
coef <- as.matrix(s$coefficients[,1])
t(X) %*% coef
X
coef
s <- summary(lmod)
coef <- as.matrix(s$coefficients[,1])
t(X) %*% coef
lmods <- lm(hipcenter ~ prcsp$x[,1:2], data = seatpos)
s <- summary(lmods)
x2 <- data.frame(Age=64.8,Weight=263.7,HtShoes=181.08,Ht=178.56,Seated=91.44, Arm=35.64,Thigh=40.95,Leg=38.79)
X2 <- rbind(1, as.matrix(predict(prcsp, newdata = x2)[1:2]))
coef <- as.matrix(s$coefficients[,1])
t(X2) %*% coef
C <- as.matrix(summary(model2)$coef[,1])
D <- rbind(1,as.matrix(predict(model2PCA,new=x2)[1:2]))
t(D) %*% C
csp_new <- seatpos[, 1:8]
prcsp_new <- prcomp(csp_new)
summary(prcsp_new)
lmods <- lm(hipcenter ~ prcsp$x[,1:2], data = seatpos)
s <- summary(lmods)
x2 <- data.frame(Age=64.8,Weight=263.7,HtShoes=181.08,Ht=178.56,Seated=91.44, Arm=35.64,Thigh=40.95,Leg=38.79)
X2 <- rbind(1, as.matrix(predict(prcsp, newdata = x2)[1:2]))
coef <- as.matrix(s$coefficients[,1])
t(X2) %*% coef
summary(model2PCA)
model2 <- lm(hipcenter~model2PCA$x[,1:2])
summary(model2)
lmods <- lm(hipcenter ~ prcsp$x[,1:2], data = seatpos)
summary(lmods)
model2 <- lm(hipcenter~model2PCA$x[,1:2], data = seatpos)
summary(model2)
lmods <- lm(hipcenter ~ prcsp_new$x[,1:2], data = seatpos)
s <- summary(lmods)
x2 <- data.frame(Age=64.8,Weight=263.7,HtShoes=181.08,Ht=178.56,Seated=91.44, Arm=35.64,Thigh=40.95,Leg=38.79)
X2 <- rbind(1, as.matrix(predict(prcsp, newdata = x2)[1:2]))
coef <- as.matrix(s$coefficients[,1])
t(X2) %*% coef
csp_new <- seatpos[, 1:8]
prcsp_new <- prcomp(csp_new)
summary(prcsp_new)
lmods <- lm(hipcenter ~ prcsp_new$x[,1:2], data = seatpos)
s <- summary(lmods)
x2 <- data.frame(Age=64.8,Weight=263.7,HtShoes=181.08,Ht=178.56,Seated=91.44, Arm=35.64,Thigh=40.95,Leg=38.79)
X2 <- rbind(1, as.matrix(predict(prcsp, newdata = x2)[1:2]))
coef <- as.matrix(s$coefficients[,1])
t(X2) %*% coef
summary(lmods)
X2 <- rbind(1, as.matrix(predict(prcsp_new, newdata = x2)[1:2]))
coef <- as.matrix(s$coefficients[,1])
t(X2) %*% coef
install.packages("pls")
#Do Faraway 2e, page 180, Exercises 4.
data(fat)
fat
dim(fat)
a <- c(seq(10,250,by=10))
test <- fat[a, -c(1:3)]
test
train <- fat[-a, -c(1:3)]
#(a) Linear regression with all predictors
lmod <- lm(siri ~ .-brozek-density, data = fat)
summary(lmod)$r.squared
rmse <- function(x,y) sqrt(mean((x-y)^2))
lmod
summary(lmod)
rmse(lmod$fit,train)
rmse(fitted(lmod), train)
test <- fat[a, -c(1, 3)]
train <- fat[-a, -c(1, 3)]
rmse(fitted(lmod), train$siri)
library(faraway)
data(fat)
dim(fat)
fat[1:3,]
attach(fat)
x <- c(seq(10,250,by=10))
testx <- fat[x,-c(1:3)]
dim(testx)
testx[1:3,]
trainx <- fat[-x,-c(1,3)]
dim(trainx)
trainx[1:3,]
modelA <- lm(siri~., data= trainx)
sumary(modelA)
rmse <- function(x,y) { sqrt(mean((x-y)^2)) }
rmse(modelA$fit,trainx)
rmse(predict(modelA,testx),fat$siri[x])
rmse(predict(lmod,test), test$siri)
rmse(predict(lmod,test), test$siri)
#(a) Linear regression with all predictors
lmod <- lm(siri ~ .-brozek-density, data = train)
summary(lmod)$r.squared
rmse <- function(x,y) sqrt(mean((x-y)^2))
rmse(fitted(lmod), train$siri)
rmse(predict(lmod,test), test$siri)
test
train
test$age
class(test$age)
#Do Faraway 2e, page 180, Exercises 4.
data(fat)
a <- c(seq(10,250,by=10))
test <- fat[a, -c(1, 3)]
train <- fat[-a, -c(1, 3)]
#(a) Linear regression with all predictors
lmod <- lm(siri ~ .-brozek-density, data = train)
#(a) Linear regression with all predictors
lmod <- lm(siri ~ ., data = train)
summary(lmod)$r.squared
rmse <- function(x,y) sqrt(mean((x-y)^2))
rmse(fitted(lmod), train$siri)
rmse(predict(lmod,test), test$siri)
step(lmod)
#(b)Linear regression with variables selected using AIC
lmodB <- step(lmod)
summary(lmodB)$r.squared
predict(lmod,test)
predict(lmod,test)
rmse(fitted(lmodB), train$siri)
predict(lmodB,test)
rmse(predict(lmod,test), test$siri)
rmse(predict(lmodB,test), test$siri)
test
#(c) Principal component regression
cfat <- test[,-1]
cfat
prcfac <- prcomp(cfat)
summary(prcfac)
fitted(lmodB)
rmse(fitted(lmod), train$siri)
rmse(predict(lmod,test), test$siri)
lmodC <- lm(siri ~ prcfat$x[,1:3], data = train)
#(c) Principal component regression
cfat <- test[,-1]
prcfac <- prcomp(cfat)
summary(prcfac)
prcfat <- prcomp(cfat)
summary(prcfat)
lmodC <- lm(siri ~ prcfat$x[,1:3], data = train)
#(c) Principal component regression
cfat <- train[,-1]
prcfat <- prcomp(cfat)
summary(prcfat)
lmodC <- lm(siri ~ prcfat$x[,1:3], data = train)
lmodC <- lm(siri ~ prcfat$x[,1:3], data = train)
summary(lmodC)$r.squared
rmse(fitted(lmodC), train$siri)
predict(lmodC,test)
rmse(predict(lmodC,test), test$siri)
lmodB
summary(lmodB)
step(lmod)
round(prcfat$sdev, 3)
matplot(1:15, prcfac$rot[,1:3], type="l", xlab="Frequency", ylab ="", col=1)
matplot(1:15, prcfac$rot[,1:3], type="l", xlab="Frequency", ylab ="", col=1)
lmodC <- pcr(siri~.,data=train,ncomp=10)
summary(lmodC)$r.squared
#Faraway 2e, page 180, Exercises 1
library(faraway)
#(c) Principal component regression
library(pls)
lmodC <- pcr(siri~.,data=train,ncomp=10)
summary(lmodC)$r.squared
rmse(fitted(lmodC, ncomp = 3), train$siri)
rmse(predict(lmodC,test, ncomp = 3), test$siri)
lmodC <- pcr(siri~.,data=train,ncomp=10)
rmse(fitted(lmodC, ncomp = 3), train$siri)
predict(lmodC,test)
